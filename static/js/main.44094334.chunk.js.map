{"version":3,"sources":["static/svg/react_logo.svg","serviceWorker.js","context/index.js","pages/common/header/logo.js","pages/common/header/navi.js","pages/common/header/index.js","pages/common/footer/index.js","pages/common/layout/index.js","components/ui/swiper.js","pages/main/index.js","route.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Context","createContext","Provider","GlobalProvider","props","useState","title","someInfo","state","setState","value","action","updateState","obj","children","Logo","Title","className","src","react","alt","styled","div","navi","link","makeContents","info","button","map","list","idx","key","onClick","alert","Nav","nav","Footer","Layout","Fragment","params","lazy","shouldSwiperUpdate","pagination","el","clickable","dynamicBullets","scrollbar","hide","navigation","nextEl","prevEl","Content","ErrorPage","React","Suspense","fallback","exact","path","component","Main","to","App","context","useContext","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.44094334.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react_logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\nimport React, {useContext, useState} from 'react'\nimport {Context} from 'context'\n\nconst store = useContext(Context)\n\n */\nimport React, {useState, createContext} from 'react'\n//context\nconst Context = createContext()\nconst {Provider} = Context\n//\nconst GlobalProvider = (props) => {\n  //state\n  const [state, setState] = useState({title: '현재타이틀', someInfo: 'info'})\n  //---------------------------------------------------------------------\n  const action = {\n    /**\n     * @title 상태관리\n     * @param object JSON\n     */\n    updateState: (obj) => {\n      setState((state) => ({...state, ...obj}))\n    }\n  }\n  //---------------------------------------------------------------------\n  const value = {\n    state,\n    action\n  }\n  return <Provider value={value}>{props.children}</Provider>\n}\nexport {Context, GlobalProvider}\n","import React from 'react'\nimport styled from 'styled-components'\n//static\nimport react from 'static/svg/react_logo.svg'\n//\nexport default function Logo() {\n  //---------------------------------------------------------------------\n\n  return (\n    <Title className=\"vertical-align-middle\">\n      <i>\n        <img src={react} alt=\"logo\" />\n      </i>\n      <span>React library</span>\n    </Title>\n  )\n}\n//---------------------------------------------------------------------\nconst Title = styled.div`\n  display: block;\n  padding: 30px 0;\n  color: #fff;\n  font-size: 1.8rem;\n  text-align: center;\n\n  span {\n    padding-right: 20px;\n    line-height: 2rem;\n  }\n\n  img {\n    width: 40px;\n    height: 40px;\n    animation: loading 5s linear infinite;\n\n    @keyframes loading {\n      0% {\n        transform: rotate(0);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  }\n`\n","/**\n * @title 레이아웃\n */\nimport React from 'react'\nimport styled from 'styled-components'\n//\nexport default () => {\n  //---------------------------------------------------------------------\n  //info\n  const navi = [\n    {title: 'Dashboard', link: '/dashboard'},\n    {title: 'Dashboard', link: '/dashboard'},\n    {title: 'Dashboard', link: '/dashboard'},\n    {title: 'Dashboard', link: '/dashboard'},\n    {title: 'Dashboard', link: '/dashboard'},\n    {title: 'Dashboard', link: '/dashboard'}\n  ]\n  //---------------------------------------------------------------------\n  //makeContents\n  const makeContents = (info) => {\n    const button = info.map((list, idx) => {\n      const {title, link} = list\n      return (\n        <button\n          key={idx}\n          onClick={() => {\n            alert(link)\n          }}>\n          <span>{title}</span>\n        </button>\n      )\n    })\n    const wrap = <section key={info}>{button}</section>\n    return [wrap]\n  }\n  //---------------------------------------------------------------------\n  return (\n    <Nav>\n      <h1>UI</h1>\n      {makeContents(navi)}\n      <h1>Hooks</h1>\n      {makeContents(navi)}\n    </Nav>\n  )\n}\n//---------------------------------------------------------------------\nconst Nav = styled.nav`\n  display: block;\n  padding: 12px 20px;\n  h1 {\n    color: #6a7187;\n    font-size: 16px;\n    font-weight: 200;\n  }\n  section {\n    display: block;\n    margin-bottom: 30px;\n  }\n  button {\n    display: block;\n    padding: 10px 20px;\n    color: #6a7187;\n    font-size: 14px;\n    font-weight: 300;\n    background: transparent;\n    :hover {\n      color: #fff;\n    }\n  }\n`\n","/**\n * @title 레이아웃\n */\nimport React from 'react'\n//components\nimport Logo from './logo'\nimport Navi from './navi'\n\nexport default () => {\n  //---------------------------------------------------------------------\n  return (\n    <header>\n      {/* 로고 */}\n      <Logo />\n      {/* 네비게이션 */}\n      <Navi />\n    </header>\n  )\n}\n","/**\n * @title 레이아웃\n */\nimport React from 'react'\n//layout\n\nconst Footer = (props) => {\n  //---------------------------------------------------------------------\n  return (\n    <footer>\n      푸터\n    </footer>\n  )\n}\nexport default Footer\n","/**\n * @title 레이아웃\n */\nimport React from 'react'\n//layout\nimport Header from 'pages/common/header'\nimport Footer from 'pages/common/footer'\n//\nconst Layout = (props) => {\n  const {children} = props\n  //---------------------------------------------------------------------\n  return (\n    <React.Fragment>\n      {/* Header */}\n      <Header />\n      {/* Contents */}\n      <main>\n        <article>{children}</article>\n        {/* Footer */}\n        <Footer />\n      </main>\n    </React.Fragment>\n  )\n}\nexport default Layout\n//---------------------------------------------------------------------\n","/**\n * @title 스와이퍼\n * @example https://react-id-swiper.ashernguyen.site/example/default\n */\nimport React from 'react'\nimport Swiper from 'react-id-swiper'\nimport styled from 'styled-components'\n//style\nimport 'swiper/css/swiper.css' // Version >= 2.4.0\n\nexport default () => {\n  let params = {\n    lazy: true,\n    shouldSwiperUpdate: true, //업데이트될때마다 re-render\n    pagination: {\n      el: '.swiper-pagination',\n      clickable: true,\n      dynamicBullets: true\n    },\n    scrollbar: {\n      el: '.swiper-scrollbar',\n      hide: false\n    },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    }\n  }\n  //---------------------------------------------------------------------\n\n  //---------------------------------------------------------------------\n  return (\n    <Swiper {...params}>\n      <div>\n        <img src=\"https://source.unsplash.com/random\" />\n      </div>\n      <div>\n        <img src=\"https://source.unsplash.com/random\" />\n      </div>\n      <div>\n        <img src=\"https://source.unsplash.com/random\" />\n      </div>\n      <div>\n        <img src=\"https://source.unsplash.com/random\" />\n      </div>\n      <div>\n        <img src=\"https://source.unsplash.com/random\" />\n      </div>\n      <div>\n        <img src=\"https://source.unsplash.com/random\" />\n      </div>\n    </Swiper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n//layout\nimport Layout from 'pages/common/layout/'\n//components\nimport Swiper from 'components/ui/swiper'\n\nexport default (props) => {\n  return (\n    <Layout>\n      <h1>메인</h1>\n      <Content>\n        <Swiper />\n      </Content>\n    </Layout>\n  )\n}\n\nconst Content = styled.div`\n  position: relative;\n  margin-top: 100px;\n\n  .swiper-wrapper {\n    div {\n      width: 100%;\n      background: #eee;\n      height: 300px;\n    }\n  }\n`\n","/**\n * @title Router 목록들\n */\nimport React from 'react'\nimport {Route, Redirect, Switch} from 'react-router-dom'\n//Router\nimport Main from 'pages/main'\nconst ErrorPage = React.lazy(() => import('pages/common/error'))\n//\nexport default () => {\n  return (\n    <React.Suspense\n      fallback={\n        <div className=\"loading\">\n          <span></span>\n        </div>\n      }>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/react\" component={Main} />\n        <Route exact path=\"/error\" component={ErrorPage} />\n        <Redirect to=\"/error\" />\n      </Switch>\n    </React.Suspense>\n  )\n}\n","/**\n * @title App.js\n */\nimport React, {useContext} from 'react'\n//context\nimport {Context} from 'context'\n//layout\n//pages\nimport Route from './route'\n\nconst App = () => {\n  //---------------------------------------------------------------------\n  //context\n  const context = useContext(Context)\n  App.context = () => context\n\n  return (\n    <React.Fragment>\n      <Route />\n    </React.Fragment>\n  )\n}\n\nexport default App\n//---------------------------------------------------------------------\n/**\n * @title 글로벌변수\n * @example const context=useContext(Context) 와 동일\n */\nexport const Global = () => {\n  return App.context()\n}\n","/**\n * @file index.js\n * @brief Router>Provier>App 순으로 wrapping\n * @author 손완휘\n */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n//context\nimport {GlobalProvider} from 'context'\n//pages\nimport App from './App'\n//style\nimport 'styles/common.scss'\nimport 'styles/layout.scss'\n// import 'styles/swiper.scss'\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <GlobalProvider>\n      <App />\n    </GlobalProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}